
@using PagedList;

@using PagedList.Mvc;
@model IPagedList<EmployeeProfile.Models.EmployeeDetail>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<style>
    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
        background-color: #EBEBEB;
    }

    th {
        background-color: #152D53;
        color: white;
    }

    td, th {
        border: 1px solid #99b3ff;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #F5F6FA;
    }

    body {
        background-color: #FFFFFF;
    }
</style>

<p>
    @using (Html.BeginForm("Index", "EmployeeDetails", FormMethod.Get))
    {
        @*<b>
                Search by:
            </b>
            @Html.RadioButton("SearchBy", "Firstname") <text>Firstname</text>
            @Html.RadioButton("SearchBy", "Gender") <text>Gender</text>
            @Html.RadioButton("SearchBy", "LancesoftID") <text>LancesoftID</text>




            @Html.TextBox("Search")<input type="submit" value="Search" />*@
        <input type="text" name="Search" placeholder="Enter First Name" />

        <input type="submit" class="btn-primary" name="submit" value="Search" />
    }
</p>



<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().EmpId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Firstname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Lastname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Phoneno)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Worklocation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().LancesoftID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Country)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Street)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Pincode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Active_Status)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.First().CreatedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CreatedBy)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.First().Vertical)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Address_status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Working_internal)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Joiningdate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Dateofbirth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Salary)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Department.DepartmentName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Designation.DesignationName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Employee_Type.EmployeeType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Login.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().SubDepartment.Name)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EmpId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Firstname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lastname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phoneno)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Worklocation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LancesoftID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Street)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pincode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active_Status)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Vertical)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address_status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Working_internal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Joiningdate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dateofbirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Salary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department.DepartmentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Designation.DesignationName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee_Type.EmployeeType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Login.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubDepartment.Name)
            </td>

            <td>
                @if (User.IsInRole("HR"))
                {
                    <input type="button" class="btn btn-primary" value="Edit" onclick="location.href='@Url.Action("Edit", "EmployeeDetails", new { id = item.EID })'" />

                    @*<input type="button" class="btn btn-danger" value="Delete" onclick="location.href='@Url.Action("Delete", "EmployeeDetails", new { id = item.EmpId })'" />*@
                }


                <input type="button" class="btn btn-info" value="Details" onclick="location.href='@Url.Action("Details", "EmployeeDetails", new { id = item.EID })'" />
            </td>


        </tr>
    }

</table>
@Html.PagedListPager(Model, i => Url.Action("Index", "EmployeeDetails", new { i, search = Request.QueryString["search"] }))
@*<input type="button" class="btn btn-primary" value="Back to List" onclick="location.href='@Url.Action("Index", "EmployeeDetails")'" />*@